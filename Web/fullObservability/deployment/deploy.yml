apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: app
  name: app
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: app
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: app
      annotations:
        pyroscope.io/scrape: 'true'
        pyroscope.io/application-name: 'app'
        pyroscope.io/profile-cpu-enabled: 'true'
        pyroscope.io/profile-mem-enabled: 'true'
        pyroscope.io/port: '8080'
    spec:
      containers:
        - image: full-observability:v5
          imagePullPolicy: Always
          name: app
          env:
            - name: WAIT_TIME
              value: "2"
            - name: TARGET
              value: "MIAO"
            - name: SERVICE_NAME
              value: app
            - name: CLIENT_URL
              value: "http://app2:8080"
            - name: JAEGER_AGENT_HOST
              value: tempo-tempo-distributed-distributor
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "true"
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
          ports:
            - name: api
              protocol: TCP
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: api
          readinessProbe:
            httpGet:
              path: /readyz
              port: api
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: app2
  name: app2
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: app2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: app2
      annotations:
        pyroscope.io/scrape: 'true'
        pyroscope.io/application-name: 'app2'
        pyroscope.io/profile-cpu-enabled: 'true'
        pyroscope.io/profile-mem-enabled: 'true'
        pyroscope.io/port: '8080'
    spec:
      containers:
        - image: full-observability:v5
          imagePullPolicy: Always
          name: app2
          env:
            - name: WAIT_TIME
              value: "1"
            - name: TARGET
              value: "MIAO"
            - name: SERVICE_NAME
              value: app2
            - name: CLIENT_URL
              value: "http://app3:8080"
            - name: JAEGER_AGENT_HOST
              value: tempo-tempo-distributed-distributor
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "true"
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
          ports:
            - name: api
              protocol: TCP
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: api
          readinessProbe:
            httpGet:
              path: /readyz
              port: api
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: app2
  name: app2
spec:
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: app2
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: app3
  name: app3
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: app3
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: app3
      annotations:
        pyroscope.io/scrape: 'true'
        pyroscope.io/application-name: 'app3'
        pyroscope.io/profile-cpu-enabled: 'true'
        pyroscope.io/profile-mem-enabled: 'true'
        pyroscope.io/port: '8080'
    spec:
      containers:
        - image: full-observability:v5
          imagePullPolicy: Always
          name: app3
          env:
            - name: WAIT_TIME
              value: "1"
            - name: TARGET
              value: "MIAO"
            - name: SERVICE_NAME
              value: app3
            - name: JAEGER_AGENT_HOST
              value: tempo-tempo-distributed-distributor
            - name: JAEGER_REPORTER_LOG_SPANS
              value: "true"
            - name: JAEGER_SAMPLER_TYPE
              value: const
            - name: JAEGER_SAMPLER_PARAM
              value: "1"
          ports:
            - name: api
              protocol: TCP
              containerPort: 8080 
          livenessProbe:
            httpGet:
              path: /healthz
              port: api
          readinessProbe:
            httpGet:
              path: /readyz
              port: api
      dnsPolicy: ClusterFirst
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  labels:
    run: app3
  name: app3
spec:
  ports:
    - name: api
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    run: app3
  type: ClusterIP
---
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  name: app
  labels:
    app: app
spec:
  selector:
    matchLabels:
      run: app
  podMetricsEndpoints:
  - port: "api"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: app2
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      run: app2
  endpoints:
  - port: "api"
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: app3
spec:
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      run: app3
  endpoints:
  - port: "api"
